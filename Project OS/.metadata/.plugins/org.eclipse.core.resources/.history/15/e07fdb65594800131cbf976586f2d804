package com.cybersoftteam.app.project_so.controller;


import smartorder.common.ClientRequest;
import smartorder.common.ServerResponse;

import com.cybersoftteam.app.project_so.R;
import com.cybersoftteam.app.project_so.network.TCPClient;

import android.app.Activity;
import android.app.Dialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;

public class RegisterActivity extends Activity {
	private EditText username; 
	private EditText password;
	private EditText confirm;
	private EditText fullname;
	private EditText email;
	private EditText phoneNumber;
	private EditText address;
	private Button save;
	private Button clear;
	private ClientRequest clientRequest;
	private TCPClient tcpClient;
	private ConnectTask con;
	private ServerResponse serverResponse;
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_register);
		//finish when press exit button
		if (getIntent().getBooleanExtra("Exit", false)) {
			finish();
		}
		username =(EditText)findViewById(R.id.et_userName);
		password =(EditText)findViewById(R.id.et_password);
		confirm =(EditText)findViewById(R.id.et_comfrim);
		fullname =(EditText)findViewById(R.id.et_fullname);
		email =(EditText)findViewById(R.id.et_email);
		phoneNumber =(EditText)findViewById(R.id.et_phoneNumber);
		address =(EditText)findViewById(R.id.et_address);

		save= (Button) findViewById(R.id.save);
		clear= (Button) findViewById(R.id.clear);


		save.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				if(!checkNull()){
					showDialog("Form Register", "Form register is not null");
				}
				else if(!checkPassword()){
					showDialog("Regsiter Form", "Password is not match");
				}else{
					//set client request
					clientRequest=new ClientRequest(ClientRequest.REGISTER,
							username.getText().toString(), password.getText().toString(),
							fullname.getText().toString(), address.getText().toString(),
							phoneNumber.getText().toString(), email.getText().toString());

					//sent request to server
					con=new ConnectTask();
					tcpClient=new TCPClient(serverResponse, clientRequest);
					con.execute(tcpClient);

				}

			}
		});
		clear.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				username.setText("");
				password.setText("");
				confirm.setText("");
				fullname.setText("");
				email.setText("");
				phoneNumber.setText("");
				address.setText("");
			}
		});

	}

	@Override
	protected void onResume() {
		super.onResume();
	}
	/**
	 * check password and confirm is match
	 * @return
	 */
	private boolean checkPassword(){
		Log.i("regester", "congirm"+confirm.getText().equals(password.getText()));
		return confirm.getText().equals(password.getText());
	}
	/**
	 * all edit text must have value
	 * @return
	 */
	private boolean checkNull(){
		Log.i("regester", "user name"+username.getText());
		Log.i("regester", "pass"+password.getText());
		Log.i("regester", "confirm"+ confirm.getText());
		Log.i("regester", "address"+address.getText());
		Log.i("regester", "email"+email.getText());
		Log.i("regester", "phone"+phoneNumber.getText());
		Log.i("regester", "fullname "+fullname.getText());
		if(username.getText().equals("") || password.getText().equals("")
				|| confirm.getText().equals("") || fullname.getText().equals("")
				|| email.getText().equals("") || phoneNumber.getText().equals("") 
				|| address.getText().equals(""))
			return false;
		return true;
	}
	/**
	 * check user name; user name must contain only [a-z0-9_]
	 * @return
	 */

	public ClientRequest getClientRequest() {
		return clientRequest;
	}

	public void setClientRequest(ClientRequest clientRequest) {
		this.clientRequest = clientRequest;
	}

	//do in background
	//da thu tach rieng ra, nhung khong the thuc hien duoc
	//vi khi doiinbackground thuc thi thi khong lay lai gia tri cua serverreponse
	//giai phap hien tai viet ngay trong activity

	public class ConnectTask extends AsyncTask<TCPClient, ServerResponse, ServerResponse>{

		@Override
		protected ServerResponse doInBackground(TCPClient... tcpClients) {
			//we create a TCPClient object and
			Log.i("asynctask", "doing backgroud---------------------");
			tcpClient.run();
			Log.i("asynstask ","request "+ clientRequest+" response"+ serverResponse.getDetail());
			publishProgress(serverResponse);
			return serverResponse;
		}

		@Override
		protected void onPostExecute(ServerResponse result) {

			//nhan ve 1 bien true false;
			Log.i("asyntask", "this is dopost server response"+ tcpClient.getServerResponse().isRegistered());
			
			if(tcpClient.getServerResponse().isRegistered()){ 
				//change to login screen
				Intent loginIntent=new Intent(getApplicationContext(), LoginActivity.class);
				startActivity(loginIntent);
			}
			else{
				showDialog("Form Register", "User name is variable");
			}

		}
	}

	public void showDialog(String title, String message){
		final Dialog dialog = new Dialog(this);
		dialog.setContentView(R.layout.dialog_show_error);
		dialog.setTitle(title);

		// set the custom dialog components - text, image and button
		TextView text = (TextView) dialog.findViewById(R.id.text);
		text.setText(message);
		ImageView image = (ImageView) dialog.findViewById(R.id.image);
		image.setImageResource(R.drawable.error);

		Button dialogButton = (Button) dialog.findViewById(R.id.dialogButtonOK);
		// if button is clicked, close the custom dialog
		dialogButton.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				dialog.dismiss();
			}
		});

		dialog.show();
	}
}
