package model;

import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.Socket;

import smartorder.common.ClientRequest;
import smartorder.common.ServerResponse;

public class Processing implements Runnable{

	private Socket soc;
	
	public Processing(Socket soc) {
		this.soc=soc;
	}
	
	@Override
	public void run() {
		try {
			InputStream in=soc.getInputStream();
			ObjectInputStream ois=new ObjectInputStream(in);
			
			ClientRequest clientRequest=(ClientRequest) ois.readObject();
			
			System.out.println("++nhan tu client "+clientRequest.toString());
			
			OutputStream out=soc.getOutputStream();
			ObjectOutputStream oos=new ObjectOutputStream(out);
			ServerResponse serverResponse=new ServerResponse();
			serverResponse.setDetail("nguyen van thi nguyen van thi");
			oos.writeObject(serverResponse);
			System.out.println("sever response "+serverResponse.getDetail());
			soc.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
}
